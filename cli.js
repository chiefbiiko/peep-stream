var diff = require('ansi-diff')({ width: process.stdout.columns })

var argv = require('minimist')(process.argv.slice(2))

var HELP = 'Usage: peep replay FILE | peep listen [PORT] [FILE]\n\n' +
 'FILE: special PEEP file generated by a Peep instance\n' +
 'PORT: listen on this PORT and redirect inbound data to FILE\n\n' +
 'If your debugging with Peep instances in a browser you need\n' +
 'to first spin up a teeing server with "peep listen" since one cannot\n' +
 'write a PEEP file from a browser context.'

var BUF419 = Buffer.from([ 0, 4, 1, 9, 4, 1, 9, 0 ])

function spacify (hexs) {
  for (var i = 0; i <)
}

function ondata (pac) {
  process.stdout.write(diff.update(
    'timestamp: ' + pac.timestamp + '\n' +
    'chunk: ' + spacify(pac.chunk.toString('hex')) + '\n'
  ))
}

function replay (file) {
  createPeepReadStream(file)
    .on('data', ondata)
    .on('error', console.error)
}

function listen (port, file) {

}
